% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Vas_train.R
\name{Vas_train}
\alias{Vas_train}
\title{Title Model construction based on KDM after standardization and PCA}
\usage{
Vas_train(
  Dat,
  v.name = c("MAP", "PWV", "ABI"),
  gender_col = "gender",
  male = "male",
  female = "female",
  split = 2,
  age_col = "age"
)
}
\arguments{
\item{Dat}{A dataframe containing the variable to be processed.}

\item{v.name}{The biomarkers used in the model you want to construct.}

\item{gender_col}{The colname of gender in your data frame. The default value is "gender".}

\item{male}{A character representing male in the gender column. The default value is "male".}

\item{female}{A character representing female in the gender column. The default value is "female"}

\item{split}{A numeric value indicating the split method for standardization. split can be 1, 2, or 3. If split is 1, all data will be standardized and the model of all data will constructed. If split is 2, the data will be standardized and model will be constructed after splitting by gender. If split is 3, you can obtain all the models. The default value is 2.}

\item{age_col}{The name of age column in the data frame. The default value is "age".}
}
\value{
A list containing the following elements: the standardization parameters of the biomarkers used in the train model you want to construct, which will be used in the test data. Moreover, the model using the KDM method will be constructed.
}
\description{
Title Model construction based on KDM after standardization and PCA
}
\examples{

data(test_data)

# You can start by organizing the data with data_process function.
# Calculate the missing data rate and identify continuous variables for log transformation
Dat <- data_process(test_data)

# Example usage of Vas_calcu function
# v.name is the colname of biomarkers used in the model you want to construct.
# If the column specified by v.name contains a missing value, the function will stop.
try_result <-Vas_train(Dat, v.name = c("PWV", "ABI","MAP"), gender_col = "gender", male = "male",female = "female", split = 2, age_col = "age")

# Extract the standardization parameters of the biomarkers used in the train model you want to construct
try_result$std_params

# Extract the KDM model constructed using the data you input
# The parameter of this model are used to calculate the biological age of the input data
train_model <- try_result$train_model

# Extract the male vascular age
vascular_age <- try_result$age_pred$male$data$bioage

# Extract the female vascular age
vascular_age <- try_result$age_pred$female$data$bioage

# Extract the difference between vascular age and actual age
vascular_age_advanced <- try_result$age_pred$male$data$baaccel_diff


}
